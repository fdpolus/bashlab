#!/bin/bash


ETC_HOSTS=/etc/hosts
sinfo="yes"         # value to show start info given a condition

# App info details & startup

app_info_grafana () {

echo "Grafana is a multi-platform open source analytics and interactive visualization web application."
echo
echo "CONTEXT: In December 2021, a Twitter user disclosed a 0day vulnerability, that unauthenticated attackers could use this" 
echo "vulnerability to step up web path and download arbitrary files through a craft url of Grafana 8.x."
echo
echo "APP VER: Grafana ver 8.2.6 "
echo
echo "TYPE OF VULN: directory path traversal"
echo
echo "CVE: CVE-2021-43798"
echo
echo "TECH: Typescript/Go/Javascript/HTML"
echo

  
}

app_info_elfinder () {

echo "elFinder is an open-source file manager for web, written in JavaScript using jQuery UI."
echo
echo "CONTEXT: There is a arguments injection vulnerability found in the elFinder 2.1.58 and before. minimal configuration."
echo "This vulnerability can allow an attacker to execute arbitrary commands on the server hosting the elFinder PHP connector, even with"
echo "minimal configuration. The issues were patched in version 2.1.59. As a workaround, ensure the connector is not exposed without authentication."
echo
echo "APP VER: elFinder ver. 2.1.58 "
echo
echo "TYPE OF VULN: ZIP Arguments Injection Leads to Commands Injection"
echo
echo "CVE: CVE-2021-32682"
echo
echo "TECH: Javascript"
echo

  
}

start_info_grafana () {

  if [ $sinfo == "yes" ]; then
    	echo
        echo "START:  After the server start, you can browse the login page at http://grafana:3000, no credential necessary for this vulnerability."
        echo
  else 
    	echo
  fi


  
}

start_info_elfinder () {

  if [ $sinfo == "yes" ]; then
    	echo
        echo "START:  After the server start, you can browse the login page at http://elfinder:80 or at http://127.6.0.1:80"
        echo
  else 
    	echo
  fi


  
}


# hosts file util   # Based on https://gist.github.com/irazasyed/a7b0a079e7727a4315b9
function removehost() {
    if [ -n "$(grep $1 /etc/hosts)" ]
    then
        echo "Removing $1 from $ETC_HOSTS";
        sudo sed -i".bak" "/$1/d" $ETC_HOSTS
    else
        echo "$1 was not found in your $ETC_HOSTS";
    fi
}

function addhost() { # ex.   127.5.0.1	bwapp
    HOSTS_LINE="$1\t$2"
    if [ -n "$(grep $2 /etc/hosts)" ]
        then
            echo "$2 already exists in /etc/hosts"
        else
            echo "Adding $2 to your $ETC_HOSTS";
            sudo -- sh -c -e "echo '$HOSTS_LINE' >> /etc/hosts";

            if [ -n "$(grep $2 /etc/hosts)" ]
                then
                    echo -e "$HOSTS_LINE was added succesfully to /etc/hosts";
                else
                    echo "Failed to Add $2, Try again!";
            fi
    fi
}

project_start ()
{ 


  echo -n "Do you want to start the proyect (y/n)?"
  read answer
  if echo "$answer" | grep -iq "^y"; then
    fullname=$1		# ex. Grafana 8.6.2
    projectname=$2     	# ex. grafana
    dockername=$3  	# ex. vulhub/grafana:8.2.6
    ip=$4   		# ex. 127.5.0.1
    port=$5		# ex. 80
    port2=$6		# optional second port binding
    sinfo="yes"
    echo "Starting $fullname"
    addhost "$ip" "$projectname"


    if [ "$(sudo docker ps -aq -f name=$projectname)" ]; 
    then
      echo "Running command: docker start $projectname"
      sudo docker start $projectname
    else
      if [ -n "${6+set}" ]; then
        echo "Running command: docker run --name $projectname -d -p $ip:80:$port -p $ip:$port2:$port2 $dockername"
        sudo docker run --name $projectname -d -p $ip:80:$port -p $ip:$port2:$port2 $dockername
      else echo "not set";
        echo "Running command: docker run --name $projectname -d -p $ip:80:$port $dockername"
        sudo docker run --name $projectname -d -p $ip:80:$port $dockername
      fi
    fi
    echo "DONE!"
    echo
    echo "Docker mapped to http://$projectname or http://$ip"
    echo
  else
    sinfo="no" 
    echo "Not starting the project, see you later."
  fi
}

project_stop ()
{
  fullname=$1	# ex. Grafana 8.6.2
  projectname=$2     # ex. grafana

  echo "Stopping... $fullname"
  echo "Running command: docker stop $projectname"
  sudo docker stop $projectname
  removehost "$projectname"
}

project_start_dispatch()
{
  case "$1" in
    grafana)
      app_info_grafana
      project_start "Grafana 8.6.2" "grafana" "vulhub/grafana:8.2.6" "127.5.0.1" "3000" "3000"
      start_info_grafana
      sudo docker container ls -f name=grafana
    ;;
    elfinder)
      app_info_elfinder
      project_start "elFinder 2.1.58" "elfinder" "vulhub/elfinder:2.1.58" "127.6.0.1" "80"
      start_info_elfinder
      sudo docker container ls -f name=elfinder
    ;;
    *)
    echo "ERROR: Project dispatch doesn't recognize the project name" 
    ;;
  esac  
}

project_stop_dispatch()
{
  case "$1" in
    grafana)
      project_stop "Grafana 8.6.2" "grafana"
    ;;
    elfinder)
      project_stop "elFinder 2.1.58" "elfinder"
    ;;
    *)
    echo "ERROR: Project dispatch doesn't recognize the project name"
    ;;
  esac  
}

# Help and status command

# List all available pentest apps 

list() {
    echo "Available pentest applications" >&2
    echo "  grafana 		- grafana 8.x CVE-2021-43798 from the vulhub collection"
    echo
    echo "  elfinder 		- grafana 2.1.59 and below CVE-2021-32682 from the vulhub collection"
    echo
    exit 1

} 

display_help() {
    echo "Pentest Docker App Management Script"
    echo
    echo "Usage: $0 {list|start|stop} [projectname]" >&2
    echo
    echo " This scripts uses docker and hosts alias to make web apps available on localhost"
    echo 
    echo " Ex."
    echo " $0 list"
    echo " 	List all available projects"
    echo " $0 start grafana"
    echo " 	Start project and make it available on localhost"
    echo " 	previous to the app start the system will give you info of the project" 
    echo " 	then it will ask if you want to start the project the inputs are:"
    echo " 	y: proceed to start the project"
    echo " 	n: cancel the starting process"
    echo " $0 stop grafana"   
    echo " 	Stop the specified project"
    echo
    echo " Dockerfiles Status List :"
    if [ "$(sudo docker ps -q -f name=grafana)" ]; then
    	echo "Grafana				running at http://grafana:3000"
    else 
    	echo "Grafana				not running"
    fi
    if [ "$(sudo docker ps -q -f name=elfinder)" ]; then
    	echo "Elfinder				running at http://elfinder:80"
    else 
    	echo "Elfinder			not running"
    fi
    exit 1
}



# Main switch case

case "$1" in
  start)
    if [ -z "$2" ]
    then
      echo "ERROR: Option start needs project name in lowercase"
      echo 
      list # call list ()
      break
    fi
    project_start_dispatch $2
    ;;
  stop)
    if [ -z "$2" ]
    then
      echo "ERROR: Option stop needs project name in lowercase"
      echo 
      list # call list ()
      break
    fi
    project_stop_dispatch $2
    ;;
  list)
    list # call list ()
    ;;
  *)
    display_help
;;
esac








